{"version":3,"file":"js/wifi-advanced-legacy.6f69f5db.js","mappings":"gMAIA,IAAMA,GAASC,EAAAA,EAAAA,MAETC,EAASF,EAAOG,YAEhBC,EAAU,GAEhB,IAAK,IAAMC,KAAcH,EAAQ,CAC/B,IAAMI,EAAOJ,EAAOG,GAAYC,KAC1BC,EAAQL,EAAOG,GAAYG,MAAQN,EAAOG,GAAYG,KAAKD,MAAQL,EAAOG,GAAYG,KAAKD,MAAQ,KAErGA,GACFH,EAAQK,KAAK,CACXH,KAAAA,EACAC,MAAAA,I,yDCdN,MAAMG,EAAc,EAEpB,S,mcCgBMC,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BC,IAAK,kBAAMC,EAAMC,YACjBC,IAAK,SAAAC,GACHC,EAAK,oBAAqBD,MAIxBE,GAAgBP,EAAAA,EAAAA,KAAS,kBAAMD,EAAcM,MAAQH,EAAMM,OAAOC,GAAKP,EAAMM,OAAOE,OAEpFC,GAAYX,EAAAA,EAAAA,KAAS,iBAAqB,UAAfE,EAAMU,KAAmB,QAAU,c,sXC3BpE,MAAMd,EAAc,EAEpB,S,shBCWA,IAAMe,GAAaC,EAAAA,EAAAA,IAAI,CAAC,WAAY,aAE9BC,GAAQC,EAAAA,EAAAA,MAERC,GAAmBC,EAAAA,EAAAA,IAAS,CAChCC,eAAgBJ,EAAMK,MAAMC,KAAKF,eACjCG,gBAAiBP,EAAMK,MAAMC,KAAKC,gBAClCC,SAAU,CACRC,KAAMT,EAAMK,MAAMC,KAAKE,SAASC,KAChCC,KAAMV,EAAMK,MAAMC,KAAKE,SAASE,QAI9BC,EAAS,WACbX,EAAMY,SAAS,2BAA4BV,GAC3CW,QAAQC,IAAI,gCACZC,EAAkBzB,OAAQ,GAGtByB,GAAoBhB,EAAAA,EAAAA,KAAI,G,m6DChC9B,MAAMhB,EAAc,EAEpB,S,4jECUA,IAAMe,GAAaC,EAAAA,EAAAA,IAAI,CAAC,WAAY,QAE9BC,GAAQC,EAAAA,EAAAA,MAERe,GAAcb,EAAAA,EAAAA,IAAS,CAC3Bc,YAAajB,EAAMK,MAAMC,KAAKW,YAC9BC,QAASlB,EAAMK,MAAMC,KAAKY,UAGtBP,EAAS,WACbX,EAAMY,SAAS,kBAAmBI,GAClCH,QAAQC,IAAI,gCACZC,EAAkBzB,OAAQ,GAG5B,SAAS6B,IACPH,EAAYE,QAAUE,KAAKC,MAAM,IAA2B,IAAhBD,KAAKE,UACjDT,QAAQC,IAAI,iBAAkBE,EAAYE,SAG5C,IAAMK,GAAgBxB,EAAAA,EAAAA,KAAI,GACpBgB,GAAoBhB,EAAAA,EAAAA,KAAI,G,mhECjC9B,MAAMhB,EAAc,EAEpB","sources":["webpack://router-sim/./src/components/BottomOtherPagesSection.vue","webpack://router-sim/./src/components/BottomOtherPagesSection.vue?8ac8","webpack://router-sim/./src/components/ToggleSwitch.vue","webpack://router-sim/./src/components/ToggleSwitch.vue?fbb7","webpack://router-sim/./src/views/Wifi_Advanced.vue","webpack://router-sim/./src/views/Wifi_Advanced.vue?707e","webpack://router-sim/./src/views/Wifi_WPS.vue","webpack://router-sim/./src/views/Wifi_WPS.vue?5d18"],"sourcesContent":["<script setup>\n// ts-check\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst routes = router.getRoutes()\n\nconst screens = []\n\nfor (const routeIndex in routes) {\n  const path = routes[routeIndex].path\n  const title = routes[routeIndex].meta && routes[routeIndex].meta.title ? routes[routeIndex].meta.title : null\n\n  if (title) {\n    screens.push({\n      path,\n      title\n    })\n  }\n}\n</script>\n\n<template>\n  <div />\n</template>\n","import script from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  labels: {\n    type: Object,\n    default: () => { return { on: '', off: '' } }\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  column: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: false\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst computedLabel = computed(() => computedValue.value ? props.labels.on : props.labels.off)\n\nconst inputType = computed(() => props.type === 'radio' ? 'radio' : 'checkbox')\n</script>\n\n<template>\n  <div\n    class=\"flex justify-start flex-wrap -mb-3\"\n    :class=\"{'flex-col':column}\"\n  >\n    <label\n      class=\"switch mr-6 mb-3 last:mr-0\"\n    >\n      <input\n        v-model=\"computedValue\"\n        :type=\"inputType\"\n        :name=\"name\"\n      >\n      <span class=\"check\" />\n      <span class=\"control-label\">{{ computedLabel }}</span>\n    </label>\n  </div>\n</template>\n","import script from \"./ToggleSwitch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ToggleSwitch.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiWifi } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue'\nimport ToggleSwitch from '@/components/ToggleSwitch.vue'\nimport ModalBox from '@/components/ModalBox.vue'\n\nconst titleStack = ref(['Wireless', 'Advanced'])\n\nconst store = useStore()\n\nconst WifiAdvancedForm = reactive({\n  broadcast_ssid: store.state.wifi.broadcast_ssid,\n  reduce_tx_power: store.state.wifi.reduce_tx_power,\n  turn_off: {\n    from: store.state.wifi.turn_off.from,\n    till: store.state.wifi.turn_off.till\n  }\n})\n\nconst submit = () => {\n  store.dispatch('saveWifiAdvancedSettings', WifiAdvancedForm)\n  console.log('Wifi Advanced Settings saved')\n  isSaveModalActive.value = true\n}\n\nconst isSaveModalActive = ref(false)\n\n</script>\n\n<template>\n  <modal-box\n    v-model=\"isSaveModalActive\"\n    title=\"Wifi-Advanced Settings Saved\"\n  >\n    <p> Wifi Advanced Settings saved. Go to Statistics to check your Wifi-Status </p>\n  </modal-box>\n  <title-bar :title-stack=\"titleStack\" />\n\n  <main-section>\n    <card-component\n      title=\"Wifi-Advanced-Settings\"\n      :icon=\"mdiWifi\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <field\n        label=\"Broadcast SSID\"\n        help=\"Wenn diese Option aktiviert ist, taucht die SSID nicht in der Liste der verfügbaren WLANs auf.\"\n      >\n        <toggle-switch\n          v-model=\"WifiAdvancedForm.broadcast_ssid\"\n          name=\"wifi-broadcast-ssid-switch\"\n        />\n      </field>\n\n      <field\n        label=\"Reduce antenna transmit power\"\n        help=\"Diese Option schränkt die Sendeleistung und damit die Reichweite des WLANs ein.\"\n      >\n        <toggle-switch\n          v-model=\"WifiAdvancedForm.reduce_tx_power\"\n          name=\"wifi-reduce_tx_power-switch\"\n        />\n      </field>\n\n      <divider />\n\n      <field\n        label=\"Scheduler\"\n        help=\"WLAN zeitgesteuert ausschalten.\"\n      >\n        <div class=\"flex gap-2 items-center\">\n          <span class=\"col-span-2 text-center \">WLAN ausschalten von </span>\n          <control v-model=\"WifiAdvancedForm.turn_off.from\" />\n          <span> bis </span>\n          <control v-model=\"WifiAdvancedForm.turn_off.till\" />\n          <span> Uhr. </span>\n        </div>\n      </field>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Save\"\n        />\n      </jb-buttons>\n    </card-component>\n  </main-section>\n\n  <bottom-other-pages-section />\n</template>\n","import script from \"./Wifi_Advanced.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Wifi_Advanced.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiWifi } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Field from '@/components/Field.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue'\nimport ToggleSwitch from '@/components/ToggleSwitch.vue'\nimport ModalBox from '@/components/ModalBox.vue'\n\nconst titleStack = ref(['Wireless', 'WPS'])\n\nconst store = useStore()\n\nconst WifiWPSForm = reactive({\n  wps_enabled: store.state.wifi.wps_enabled,\n  wps_pin: store.state.wifi.wps_pin\n})\n\nconst submit = () => {\n  store.dispatch('saveWPSSettings', WifiWPSForm)\n  console.log('Wifi Advanced Settings saved')\n  isSaveModalActive.value = true\n}\n\nfunction genNewPin () {\n  WifiWPSForm.wps_pin = Math.floor(10000000 + Math.random() * 90000000)\n  console.log('new wps pin is', WifiWPSForm.wps_pin)\n}\n\nconst isModalActive = ref(false)\nconst isSaveModalActive = ref(false)\n\n</script>\n\n<template>\n  <modal-box\n    v-model=\"isModalActive\"\n    title=\"Add new device\"\n  >\n    <p>This is just an simulation.</p>\n    <p>In real life you can now connect your Device via WPS.</p>\n  </modal-box>\n  <modal-box\n    v-model=\"isSaveModalActive\"\n    title=\"WPS Settings Saved\"\n  >\n    <p>WPS-Settings saved. Go to Statistics to check your Wifi-Status</p>\n  </modal-box>\n\n  <title-bar :title-stack=\"titleStack\" />\n\n  <main-section>\n    <card-component\n      title=\"WPS-Settings\"\n      :icon=\"mdiWifi\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <div class=\"grid grid-cols-1 gap-6 mb-6 lg:grid-cols-2\">\n        <div>\n          <field\n            label=\"WPS Staus\"\n            help=\"Aktivieren oder Deaktiviern Sie WPS.\"\n          >\n            <toggle-switch\n              v-model=\"WifiWPSForm.wps_enabled\"\n              name=\"wifi-wps-switch\"\n              :labels=\"{ on: 'enabled', off: 'disabled' }\"\n            />\n          </field>\n\n          <div v-show=\"WifiWPSForm.wps_enabled\">\n            <divider />\n\n            <field\n              label=\"Use WPS-PBC\"\n              help=\"Drücken Sie auf diesen Button um eine Gerät per WPS-PBC zu verbinden.\"\n            >\n              <jb-button\n                color=\"warning\"\n                label=\"Add new Device\"\n                small\n                @click=\"isModalActive = true\"\n              />\n            </field>\n\n            <divider />\n\n            <field\n              label=\"Use WPS-PIN\"\n              help=\"Mit Hilfe der PIN können Sie ein Gerät mittels WPS-PIN verbinden.\"\n            >\n              <div class=\"flex flex-row gap-3 ml-2 items-center m-3\">\n                <p class=\"strong font-bold text-lg\">\n                  {{ WifiWPSForm.wps_pin }}\n                </p>\n                <jb-button\n                  color=\"warning\"\n                  label=\"Generate new PIN\"\n                  small\n                  @click=\"genNewPin()\"\n                />\n              </div>\n            </field>\n          </div>\n        </div>\n\n        <div class=\"bg-gray-200 p-4 rounded\">\n          <divider class=\"lg:hidden\" />\n\n          <label class=\"block font-bold mb-2\">Infos:</label>\n          Der Router Sim unterstütz zwei WPS Methoden:\n          <divider />\n          <h2 class=\"text-blue-600 font-bold my-1\">\n            Authentifizierung nach Knopfdruck (WPS-PBC):\n          </h2>\n          <p\n            class=\"block text-justify\"\n          >\n            Beim WPS-PBC-Verfahren drückt man einen Knopf, um die WPS-Anmeldephase zu starten. Der erste WLAN-Client, der sich daraufhin per WPS anmeldet, bekommt das Passwort für die WLAN-Authentifizierung. Ein Angreifer müsste genau diesen Moment abpassen und dann schneller als man selbst sein. Das macht einen solchen Angriff unwahrscheinlich.\n          </p>\n          <divider />\n          <h2 class=\"text-blue-600 font-bold my-1\">\n            Authentifizierung per Zahleneingabe (WPS-Pin):\n          </h2>\n          <p\n            class=\"block text-justify\"\n          >\n            Die Authentifizierung per WPS-Pin sieht die Eingabe einer achtstelligen Zahlenfolge auf dem WLAN-Client vor. Gerade bei Smartphones ist das eine echte Erleichterung. Vor allem, wenn man ein kompliziertes WLAN-Passwort mit Buchstaben, Zahlen und Sonderzeichen hat. Die WPS-Pin-Methode sieht vor, dass das WLAN-Passwort dem WLAN-Client mitgeteilt wird, wenn ein korrekter WPS-Pin eingegeben wurde.\n          </p>\n          <p>Das Problem bei dieser Methode ist, dass die meisten Access-Points einen statischen WPS-Pin vergeben. Das heißt der Pin ändert sich nie. Dadurch lässt sich in 3 – 10 Stunden durch reines Ausprobieren der Pin herausfinden und ein Zugang zum WLAN herstellen.</p>\n        </div>\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Save\"\n        />\n      </jb-buttons>\n    </card-component>\n  </main-section>\n\n  <bottom-other-pages-section />\n</template>\n","import script from \"./Wifi_WPS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Wifi_WPS.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["router","useRouter","routes","getRoutes","screens","routeIndex","path","title","meta","push","__exports__","computedValue","computed","get","props","modelValue","set","value","emit","computedLabel","labels","on","off","inputType","type","titleStack","ref","store","useStore","WifiAdvancedForm","reactive","broadcast_ssid","state","wifi","reduce_tx_power","turn_off","from","till","submit","dispatch","console","log","isSaveModalActive","WifiWPSForm","wps_enabled","wps_pin","genNewPin","Math","floor","random","isModalActive"],"sourceRoot":""}