{"version":3,"file":"js/wifi-security-legacy.57f69a40.js","mappings":"gMAIA,IAAMA,GAASC,EAAAA,EAAAA,MAETC,EAASF,EAAOG,YAEhBC,EAAU,GAEhB,IAAK,IAAMC,KAAcH,EAAQ,CAC/B,IAAMI,EAAOJ,EAAOG,GAAYC,KAC1BC,EAAQL,EAAOG,GAAYG,MAAQN,EAAOG,GAAYG,KAAKD,MAAQL,EAAOG,GAAYG,KAAKD,MAAQ,KAErGA,GACFH,EAAQK,KAAK,CACXH,KAAAA,EACAC,MAAAA,I,yDCdN,MAAMG,EAAc,EAEpB,S,kfCqBMC,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BC,IAAK,kBAAMC,EAAMC,YACjBC,IAAK,SAAAC,GACHC,EAAK,oBAAqBD,MAIxBE,GAAYP,EAAAA,EAAAA,KAAS,iBAAqB,UAAfE,EAAMM,KAAmB,QAAU,c,6hBC9BpE,MAAMV,EAAc,EAEpB,S,0XCiBMW,GAAiBT,EAAAA,EAAAA,KAAS,kBAAME,EAAMQ,QACxCC,EAAAA,GAAcT,EAAMU,OACpB,CAACC,EAAAA,GAASX,EAAMU,OAAQE,EAAAA,GAAcZ,EAAMU,WAE1CG,GAAcC,EAAAA,EAAAA,KAAI,GAElBC,EAAU,WACdF,EAAYV,OAAQ,GAGhBa,GAAQC,EAAAA,EAAAA,MAERC,GAAepB,EAAAA,EAAAA,KAAS,kBAAMkB,EAAMG,SAEpCC,GAAQC,EAAAA,EAAAA,MAERC,GAAWxB,EAAAA,EAAAA,KAAS,kBAAMsB,EAAMG,MAAMD,Y,qvBCnC5C,MAAM1B,EAAc,EAEpB,S,03FCaA,IAAM4B,GAAaV,EAAAA,EAAAA,IAAI,CAAC,WAAY,aAE9BM,GAAQC,EAAAA,EAAAA,MACRI,GAAQC,EAAAA,EAAAA,MAERC,GAAWC,EAAAA,EAAAA,IAAS,CACxBC,SAAUT,EAAMG,MAAMO,KAAKC,cAC3BC,MAAO,CACLC,QAASC,EAAAA,GAAuBd,EAAMG,MAAMO,KAAKK,aAAaF,SAC9DG,WAAYC,EAAAA,GAA0BjB,EAAMG,MAAMO,KAAKK,aAAaC,YACpEE,GAAIlB,EAAMG,MAAMO,KAAKK,aAAaG,IAEpCC,MAAO,CACLN,QAASC,EAAAA,GAAuBd,EAAMG,MAAMO,KAAKU,oBAAoBP,SACrEG,WAAYC,EAAAA,GAA0BjB,EAAMG,MAAMO,KAAKU,oBAAoBJ,YAC3EK,GAAIrB,EAAMG,MAAMO,KAAKU,oBAAoBE,OAAOD,GAChDE,KAAMvB,EAAMG,MAAMO,KAAKU,oBAAoBE,OAAOC,QAIhDC,EAAS,WACbxB,EAAMyB,SAAS,mBAAoBlB,GACnCmB,QAAQC,IAAI,uBACZtB,EAAMuB,QAAQ,4BAGVC,GAAcnC,EAAAA,EAAAA,IAAIM,EAAMG,MAAM2B,OAAOC,M,qmJCzC3C,MAAMvD,EAAc,EAEpB","sources":["webpack://router-sim/./src/components/BottomOtherPagesSection.vue","webpack://router-sim/./src/components/BottomOtherPagesSection.vue?8ac8","webpack://router-sim/./src/components/CheckRadioPicker.vue","webpack://router-sim/./src/components/CheckRadioPicker.vue?5501","webpack://router-sim/./src/components/Notification.vue","webpack://router-sim/./src/components/Notification.vue?deb2","webpack://router-sim/./src/views/Wifi_Security.vue","webpack://router-sim/./src/views/Wifi_Security.vue?0e54"],"sourcesContent":["<script setup>\n// ts-check\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst routes = router.getRoutes()\n\nconst screens = []\n\nfor (const routeIndex in routes) {\n  const path = routes[routeIndex].path\n  const title = routes[routeIndex].meta && routes[routeIndex].meta.title ? routes[routeIndex].meta.title : null\n\n  if (title) {\n    screens.push({\n      path,\n      title\n    })\n  }\n}\n</script>\n\n<template>\n  <div />\n</template>\n","import script from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => {}\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  type: {\n    type: String,\n    default: 'checkbox'\n  },\n  column: Boolean,\n  disabled: Boolean,\n  modelValue: {\n    type: [Object, Array, String, Number],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst inputType = computed(() => props.type === 'radio' ? 'radio' : 'checkbox')\n\n</script>\n\n<template>\n  <div\n    class=\"flex justify-start flex-wrap -mb-3\"\n    :class=\"{'flex-col':column}\"\n  >\n    <label\n      v-for=\"(value, key) in options\"\n      :key=\"key\"\n      :class=\"type\"\n      class=\"mr-6 mb-3 last:mr-0\"\n    >\n      <input\n        v-model=\"computedValue\"\n        :type=\"inputType\"\n        :name=\"name\"\n        :value=\"key\"\n        :disabled=\"disabled\"\n      >\n      <span class=\"check\" />\n      <span class=\"control-label\">{{ value }}</span>\n    </label>\n  </div>\n</template>\n","import script from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, computed, useSlots } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiClose } from '@mdi/js'\nimport { colorsBg, colorsBorders, colorsOutline } from '@/colors.js'\nimport Level from '@/components/Level.vue'\nimport Icon from '@/components/Icon.vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    default: null\n  },\n  outline: Boolean,\n  color: {\n    type: String,\n    required: true\n  },\n  permanent: Boolean\n})\n\nconst componentClass = computed(() => props.outline\n  ? colorsOutline[props.color]\n  : [colorsBg[props.color], colorsBorders[props.color]])\n\nconst isDismissed = ref(false)\n\nconst dismiss = () => {\n  isDismissed.value = true\n}\n\nconst slots = useSlots()\n\nconst hasRightSlot = computed(() => slots.right)\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n</script>\n\n<template>\n  <div\n    v-if=\"!isDismissed\"\n    :class=\"componentClass\"\n    class=\"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"\n  >\n    <level>\n      <div class=\"flex flex-col md:flex-row items-center\">\n        <icon\n          v-if=\"icon\"\n          :path=\"icon\"\n          w=\"w-10 md:w-5\"\n          h=\"h-10 md:h-5\"\n          size=\"24\"\n          class=\"md:mr-2\"\n        />\n        <span class=\"text-center md:text-left\"><slot /></span>\n      </div>\n      <slot\n        v-if=\"hasRightSlot\"\n        name=\"right\"\n      />\n      <jb-button\n        v-else-if=\"!props.permanent\"\n        :icon=\"mdiClose\"\n        :outline=\"outline || (darkMode && ['white', 'light'].indexOf(color) < 0)\"\n        small\n        @click=\"dismiss\"\n      />\n      <div v-else />\n    </level>\n  </div>\n</template>\n","import script from \"./Notification.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Notification.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport { useToast } from 'vue-toastification'\nimport { mdiWifi, mdiLockOff, mdiAlertCircleOutline, mdiInformation, mdiArrowRight } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport CheckRadioPicker from '@/components/CheckRadioPicker.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue'\nimport CardComponentCollapsable from '@/components/CardComponentCollapsable.vue'\nimport Notification from '@/components/Notification.vue'\nimport Icon from '@/components/Icon.vue'\nimport { securityEncryptionOptions, securityVersionOptions, securityModeOptions } from '@/config'\nconst titleStack = ref(['Wireless', 'Security'])\n\nconst store = useStore()\nconst toast = useToast()\n\nconst security = reactive({\n  selected: store.state.wifi.security_mode,\n  wpa_p: {\n    version: securityVersionOptions[store.state.wifi.security_psk.version],\n    encryption: securityEncryptionOptions[store.state.wifi.security_psk.encryption],\n    pw: store.state.wifi.security_psk.pw\n  },\n  wpa_e: {\n    version: securityVersionOptions[store.state.wifi.security_enterprise.version],\n    encryption: securityEncryptionOptions[store.state.wifi.security_enterprise.encryption],\n    ip: store.state.wifi.security_enterprise.radius.ip,\n    port: store.state.wifi.security_enterprise.radius.port\n  }\n})\n\nconst submit = () => {\n  store.dispatch('saveWifiSettings', security)\n  console.log('Wifi-Security saved')\n  toast.success('Security settings saved')\n}\n\nconst allDisabled = ref(store.state.checks.done)\n\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n\n  <main-section>\n    <card-component-collapsable\n      title=\"Wifi-Security\"\n      :icon=\"mdiWifi\"\n      expanded\n      form\n      @submit.prevent=\"submit\"\n    >\n      <check-radio-picker\n        v-model=\"security.selected\"\n        name=\"selected-security-option\"\n        type=\"radio\"\n        :options=\"securityModeOptions\"\n        :disabled=\"allDisabled\"\n      />\n\n      <divider />\n\n      <div v-if=\"security.selected == 'disabled'\">\n        <notification\n          color=\"danger\"\n          :icon=\"mdiLockOff\"\n          permanent\n        >\n          <b>Danger:</b>\n          You disabled all wifi-security settings.\n          Your network will be open for everyone within reach.\n        </notification>\n      </div>\n\n      <div v-else-if=\"security.selected == 'psk'\">\n        <div class=\"grid grid-cols-1 gap-6 mb-6 lg:grid-cols-2 \">\n          <field\n            label=\"Version\"\n            help=\"WPA sollte nicht mehr verwendet werden. Umso höher die Version umso besser. Allerdings unterstützen noch nicht alle Clients WPA3!\"\n          >\n            <control\n              v-model=\"security.wpa_p.version\"\n              :options=\"securityVersionOptions\"\n              :disabled=\"allDisabled\"\n            />\n          </field>\n          <field\n            label=\"Encryption\"\n            help=\"Select encryption type: AES ist moderner und sicherer als TKIP\"\n          >\n            <control\n              v-model=\"security.wpa_p.encryption\"\n              :options=\"securityEncryptionOptions\"\n              :disabled=\"allDisabled\"\n            />\n          </field>\n        </div>\n        <field\n          label=\"Password\"\n          help=\"Choose a strong password for safety reasons. Verify at https://checkdeinpasswort.de/ \"\n        >\n          <control\n            v-model=\"security.wpa_p.pw\"\n            :disabled=\"allDisabled\"\n          />\n        </field>\n      </div>\n      <div v-else-if=\"security.selected == 'enterprise'\">\n        <notification\n          color=\"info\"\n          :icon=\"mdiAlertCircleOutline\"\n          permanent\n        >\n          <b>Info:</b>\n          Ein externer Radius Server ist für diese Einstellung notwendig!\n        </notification>\n        <div class=\"grid grid-cols-1 gap-6 mb-6 lg:grid-cols-2 \">\n          <field label=\"Version\">\n            <control\n              v-model=\"security.wpa_e.version\"\n              :options=\"securityVersionOptions\"\n              :disabled=\"allDisabled\"\n            />\n          </field>\n          <field\n            label=\"Encryption\"\n            help=\"Select encryption type\"\n          >\n            <control\n              v-model=\"security.wpa_e.encryption\"\n              :options=\"securityEncryptionOptions\"\n              :disabled=\"allDisabled\"\n            />\n          </field>\n        </div>\n        <div class=\"grid grid-cols-1 gap-6 mb-6 lg:grid-cols-3 \">\n          <field\n            class=\"col-span-2\"\n            label=\"Radius Server IP\"\n            help=\"Geben Sie hier die IP-Adresse des Radius servers ein.\"\n          >\n            <control\n              v-model=\"security.wpa_e.ip\"\n              :disabled=\"allDisabled\"\n            />\n          </field>\n          <field\n            label=\"Radius Server Port\"\n            help=\"Der Standardport ist: 1812\"\n          >\n            <control\n              v-model=\"security.wpa_e.port\"\n              :disabled=\"allDisabled\"\n            />\n          </field>\n        </div>\n      </div>\n      <div v-else-if=\"security.selected == 'wep'\">\n        <notification\n          color=\"danger\"\n          :icon=\"mdiLockOff\"\n          permanent\n        >\n          <b>Danger:</b>\n          This security option is highly insecure.\n          WEP can be hacked within minutes.\n        </notification>\n      </div>\n      <div v-else>\n        <notification\n          color=\"info\"\n          :icion=\"mdiAlertCircleOutline\"\n        >\n          Please select an Security Option!\n          <template #right />\n        </notification>\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Save\"\n          :disabled=\"allDisabled\"\n        />\n      </jb-buttons>\n    </card-component-collapsable>\n  </main-section>\n\n  <main-section>\n    <card-component-collapsable\n      title=\"Weitere Infos:\"\n      :icon=\"mdiInformation\"\n      expanded\n      class=\"bg-gray-200\"\n    >\n      <field label=\"WLAN-Sicherheit\">\n        <p>Funksignale bewegen sich im freien Raum. Das bedeutet, jeder der ein Funksignal empfangen kann, kann die gesendeten Funksignale abhören oder manipulieren. Das Abhören einer Funkverbindung kann praktisch nicht verhindert werden. Deshalb müssen WLANs mit Authentifizierung und Verschlüsselung betrieben werden.</p>\n      </field>\n\n      <field label=\"WLAN-Authentifizierung\">\n        <p>Fremde Personen sollten das eigene WLAN nicht nutzen dürfen. Deshalb sollte der Zugriff auf das WLAN mit einem starken Passwort eingeschränkt werden. Das Passwort bekommen dann nur die Personen und Geräte, die Zugriff auf das WLAN haben dürfen. Doch ist das Passwort erst einmal bekannt, dann ist damit der Zugriff ungesichert. Dieses Verfahren nennt man PSK (Pre-Shared-Key).</p>\n        <p>Bei größeren WLANs mit vielen Nutzern und Access Points kann Authentifizierung auch mit eigene Zugangsdaten (Benutzername und Passwort) pro Nutzer eingerichtet werden. An einer zentralen Stelle kann der Zugriff auf einfache Art und Weise freigegeben oder eingeschränkt werden. Dies erfordert doch einen erhöhten administrativen Aufwand.</p>\n      </field>\n\n      <field label=\"WLAN-Verschlüsselung\">\n        <p>Durch die Verschlüsselung soll das Mitlesen der übertragenen Daten verhindert werden. Die Verschlüsselungsstandards (WEP, WPA, WPA2 und WPA3) legen fest wie die Verschlüsselung funktioniert. WEP und WPA sind heutzutage leicht zu knacken und sollten auf keinen Fall verwendet werden.</p>\n        <p>WPA2 (Wifi Protected Access 2) wurde 2004 eingeführt und war lange Zeit der sicherste Standard und gilt auch heute noch als relativ sicher. Jedoch hat auch WPA2 einige Schwachstellen. Deshalb wurde 2018 der Nachfolger WPA3 vorgestellt. Dieser gilt als der aktuelle und sicherste Verschlüsselungsstandard. Leider unterstützen immer noch nicht alle Geräte diesen Standard, so das oft auf WPA2 zurückgegriffen werden muss.</p>\n      </field>\n\n      <divider />\n      <div class=\"flex \">\n        <icon :path=\"mdiArrowRight\" />\n        <a\n          class=\"link text-red-600\"\n          href=\"https://www.elektronik-kompendium.de/sites/net/1403011.htm\"\n          target=\"_blank\"\n        > Weitere Infos hier</a>\n      </div>\n    </card-component-collapsable>\n  </main-section>\n\n  <bottom-other-pages-section />\n</template>\n","import script from \"./Wifi_Security.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Wifi_Security.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["router","useRouter","routes","getRoutes","screens","routeIndex","path","title","meta","push","__exports__","computedValue","computed","get","props","modelValue","set","value","emit","inputType","type","componentClass","outline","colorsOutline","color","colorsBg","colorsBorders","isDismissed","ref","dismiss","slots","useSlots","hasRightSlot","right","store","useStore","darkMode","state","titleStack","toast","useToast","security","reactive","selected","wifi","security_mode","wpa_p","version","securityVersionOptions","security_psk","encryption","securityEncryptionOptions","pw","wpa_e","security_enterprise","ip","radius","port","submit","dispatch","console","log","success","allDisabled","checks","done"],"sourceRoot":""}