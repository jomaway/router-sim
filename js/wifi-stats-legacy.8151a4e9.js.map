{"version":3,"file":"js/wifi-stats-legacy.8151a4e9.js","mappings":"gMAIA,IAAMA,GAASC,EAAAA,EAAAA,MAETC,EAASF,EAAOG,YAEhBC,EAAU,GAEhB,IAAK,IAAMC,KAAcH,EAAQ,CAC/B,IAAMI,EAAOJ,EAAOG,GAAYC,KAC1BC,EAAQL,EAAOG,GAAYG,MAAQN,EAAOG,GAAYG,KAAKD,MAAQL,EAAOG,GAAYG,KAAKD,MAAQ,KAErGA,GACFH,EAAQK,KAAK,CACXH,KAAAA,EACAC,MAAAA,I,yDCdN,MAAMG,EAAc,EAEpB,S,wwKCYA,IAAMC,GAAaC,EAAAA,EAAAA,IAAI,CAAC,WAAY,eAE9BC,GAAQC,EAAAA,EAAAA,MACRC,IAAQC,EAAAA,EAAAA,MAERC,IAAWC,EAAAA,EAAAA,KAAS,kBAAML,EAAMM,MAAMF,YAEtCG,IAAcF,EAAAA,EAAAA,KAAS,kBAAML,EAAMM,MAAME,KAAKC,iBAAmBT,EAAMM,MAAME,KAAKE,WAElFC,IAAuBN,EAAAA,EAAAA,KAAS,WACpC,IAAMO,EAAOZ,EAAMM,MAAME,KAAKI,KAG9B,OAFAC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,GAAQ,GAAMA,EAAO,GAAKA,EAAO,GACrCA,GAAQ,GAAMA,GAAQ,GAAKA,GAAQ,KAEvCG,IAAeV,EAAAA,EAAAA,KAAS,WAC5B,IAAMO,EAAOZ,EAAMM,MAAME,KAAKI,KAC9B,OAAiB,IAATA,GAAcA,GAAQ,KAE1BI,IAAeX,EAAAA,EAAAA,KAAS,WAC5B,IAAMO,EAAOZ,EAAMM,MAAME,KAAKI,KAC9B,OAAiB,IAATA,GAAuB,IAATA,GAAuB,IAATA,GAAuB,KAATA,KAE9CK,IAAeZ,EAAAA,EAAAA,KAAS,WAC5B,IAAMO,EAAOZ,EAAMM,MAAME,KAAKI,KAC9B,OAAiB,IAATA,GAAcA,GAAQ,KAG1BM,IAAmBb,EAAAA,EAAAA,KAAS,WAChC,QAA4C,KAAnCL,EAAMM,MAAME,KAAKW,SAASC,MAAkD,KAAnCpB,EAAMM,MAAME,KAAKW,SAASE,SAGxEC,IAASC,EAAAA,EAAAA,IAAS,CACtBC,KAAMxB,EAAMM,MAAMgB,OAAOE,KACzBC,KAAM,EACNC,WAAW,IAEPC,IAAatB,EAAAA,EAAAA,KAAS,kBAAML,EAAMM,MAAMgB,OAAOE,QAE/CI,GAAY,WAChBf,QAAQC,IAAI,sBAAuBQ,GAAOG,MACtB,UAAhBH,GAAOG,MACTzB,EAAM6B,OAAO,aAAa,GAC1B3B,GAAM4B,QAAQ,0BAEdR,GAAOI,WAAY,EACnBxB,GAAM6B,MAAM,+B,65UC5DhB,MAAMlC,GAAc,GAEpB","sources":["webpack://router-sim/./src/components/BottomOtherPagesSection.vue","webpack://router-sim/./src/components/BottomOtherPagesSection.vue?8ac8","webpack://router-sim/./src/views/Wifi_Stats.vue","webpack://router-sim/./src/views/Wifi_Stats.vue?3bc8"],"sourcesContent":["<script setup>\n// ts-check\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\n\nconst routes = router.getRoutes()\n\nconst screens = []\n\nfor (const routeIndex in routes) {\n  const path = routes[routeIndex].path\n  const title = routes[routeIndex].meta && routes[routeIndex].meta.title ? routes[routeIndex].meta.title : null\n\n  if (title) {\n    screens.push({\n      path,\n      title\n    })\n  }\n}\n</script>\n\n<template>\n  <div />\n</template>\n","import script from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { useToast } from 'vue-toastification'\nimport { mdiInformationVariant, mdiCog, mdiWifi, mdiAlert, mdiCheck, mdiAlertOctagram, mdiLockAlert } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue'\nimport Notification from '@/components/Notification.vue'\nimport CardComponentCollapsable from '@/components/CardComponentCollapsable.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport { selectModeOptions, securityModeOptions, securityVersionOptions, securityEncryptionOptions } from '@/config'\n\nconst titleStack = ref(['Wireless', 'Statistics'])\n\nconst store = useStore()\nconst toast = useToast()\n\nconst darkMode = computed(() => store.state.darkMode)\n\nconst wifiEnabled = computed(() => store.state.wifi.twoPointFourGHz || store.state.wifi.fiveGHz)\n\nconst wifiBackwardsSupport = computed(() => {\n  const mode = store.state.wifi.mode\n  console.log(mode)\n  console.log(mode <= 2 || (mode > 6 && mode < 8))\n  return (mode <= 2 || (mode >= 6 && mode <= 8))\n})\nconst wifi4Support = computed(() => {\n  const mode = store.state.wifi.mode\n  return (mode === 4 || mode >= 6)\n})\nconst wifi5Support = computed(() => {\n  const mode = store.state.wifi.mode\n  return (mode === 3 || mode === 7 || mode === 8 || mode === 10)\n})\nconst wifi6Support = computed(() => {\n  const mode = store.state.wifi.mode\n  return (mode === 5 || mode >= 9)\n})\n\nconst schedulerEnabled = computed(() => {\n  return !(store.state.wifi.turn_off.from === '' || store.state.wifi.turn_off.till === '')\n})\n\nconst checks = reactive({\n  done: store.state.checks.done,\n  code: 0,\n  wrongCode: false\n})\nconst checksDone = computed(() => store.state.checks.done)\n\nconst runChecks = () => {\n  console.log('starting checks ...', checks.code)\n  if (checks.code === '23985') {\n    store.commit('runChecks', true)\n    toast.success('Running checks done ')\n  } else {\n    checks.wrongCode = true\n    toast.error('Please insert corect code')\n  }\n}\n\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n\n  <main-section>\n    <card-component-collapsable\n      title=\"Overview:\"\n      expanded\n      class=\"bg-gray-200\"\n    >\n      <div class=\"flex flex-col gap-2\">\n        <p><b>SSID: </b> {{ store.state.wifi.ssid }} </p>\n        <p><b>2,4 GHz: </b> {{ store.state.wifi.twoPointFourGHz ? 'aktiviert' : 'deaktiviert' }} </p>\n        <p><b> 5 GHz: </b>{{ store.state.wifi.fiveGHz ? 'aktiviert' : 'deaktiviert' }}</p>\n        <p><b>Mode:</b> {{ selectModeOptions[store.state.wifi.mode].label }}</p>\n      </div>\n      <divider />\n      <div class=\"flex flex-col gap-2\">\n        <p><b>Security Mode: </b> {{ securityModeOptions[store.state.wifi.security_mode] }} </p>\n        <div v-if=\"store.state.wifi.security_mode === 'psk'\">\n          <p><b>Version: </b> {{ securityVersionOptions[store.state.wifi.security_psk.version].label }}</p>\n          <p><b>Encryption: </b> {{ securityEncryptionOptions[store.state.wifi.security_psk.encryption].label }}</p>\n          <p><b>PW: </b> {{ store.state.wifi.security_psk.pw }}</p>\n        </div>\n        <div v-else-if=\"store.state.wifi.security_mode === 'enterprise'\">\n          <p><b>Version: </b> {{ securityVersionOptions[store.state.wifi.security_enterprise.version].label }}</p>\n          <p><b>Encryption: </b> {{ securityEncryptionOptions[store.state.wifi.security_enterprise.encryption].label }}</p>\n          <p><b>Radius server Ip: </b> {{ store.state.wifi.security_enterprise.radius.ip }}</p>\n          <p><b>Radius server Port: </b> {{ store.state.wifi.security_enterprise.radius.port }}</p>\n        </div>\n      </div>\n      <divider />\n      <div class=\"flex flex-col gap-2\">\n        <p><b>MAC-Filter: </b> {{ store.state.wifi.macFilter.enabled ? 'aktiviert' : 'deaktiviert' }}  - <b>Regel</b>: {{ store.state.wifi.macFilter.rule }} </p>\n        <p><b>SSID-Broadcast : </b> {{ store.state.wifi.broadcast_ssid ? 'aktiviert' : 'deaktiviert' }} </p>\n        <p><b>Sendeleistung: </b> {{ store.state.wifi.reduce_tx_power ? 'reduziert' : 'nicht reduziert' }} </p>\n        <p><b>WLAN Zeitabschaltung: </b> {{ schedulerEnabled ? 'aktiviert' : 'deaktiviert' }} </p>\n        <p v-if=\"schedulerEnabled\">\n          <b>Wlan wird ausgeschalten von: </b> {{ store.state.wifi.turn_off.from ?? '00:00' }} <b> bis: </b> {{ store.state.wifi.turn_off.till ?? '00:00' }}\n        </p>\n        <p><b>WPS:</b> {{ store.state.wifi.wps_enabled ? 'aktiviert' : 'deaktiviert' }} </p>\n      </div>\n    </card-component-collapsable>\n\n    <div class=\"h-2\" />\n\n    <card-component\n      title=\"Run Checks\"\n      class=\"bg-red-200\"\n    >\n      <div class=\"flex flex-col gap-4\">\n        <p class=\"\">\n          Wenn du die Konfiguration abgeschlossen hast kannst du hier deine Einstellungen überprüfen.\n        </p>\n        <p class=\"mb-2\">\n          <b>Überprüfe</b> nochmal ob deine Einstellungen alle <b>Anforderungen</b> (siehe Whitebaord) erfüllen, bevor du die Checks startest.\n        </p>\n        <field\n          label=\"Starte die Checks\"\n          help=\"Gebe den Code ein und klicke auf den Button Run checks\"\n        >\n          <control\n            id=\"runChecksCode\"\n            placeholder=\"Enter Code\"\n            type=\"numbers\"\n            :wrong-input=\"checks.wrongCode\"\n            @input=\"event => checks.code = event.target.value\"\n          />\n          <jb-button\n            type=\"button\"\n            color=\"warning\"\n            label=\"Run checks\"\n            @click=\"runChecks\"\n          />\n        </field>\n      </div>\n    </card-component>\n\n    <card-component\n      v-if=\"checksDone\"\n      title=\"WLAN-Settings\"\n    >\n      <!-- WLAN check -->\n      <notification\n        v-if=\"wifiEnabled\"\n        color=\"success\"\n        :icon=\"mdiWifi\"\n        permanent\n      >\n        WLAN is enabled.\n      </notification>\n      <notification\n        v-else\n        color=\"warning\"\n        :icon=\"mdiWifi\"\n      >\n        WLAN is disabled. Go to Wireless Settings to enable it.\n        <template #right>\n          <jb-button\n            to=\"/wifi-settings\"\n            :icon=\"mdiCog\"\n            icon-w=\"w-4\"\n            icon-h=\"h-4\"\n            :color=\"darkMode ? 'white' : 'light'\"\n            :outline=\"darkMode\"\n            small\n          />\n        </template>\n      </notification>\n\n      <!-- IF WLAN enabled -->\n      <div\n        v-if=\"wifiEnabled\"\n        class=\"mb-6\"\n      >\n        <!-- WLAN freq info -->\n        <notification\n          v-if=\"store.state.wifi.twoPointFourGHz\"\n          color=\"info\"\n          :icon=\"mdiInformationVariant\"\n          permanent\n        >\n          The <b>2,4 GHz</b> frequency is enabled.\n        </notification>\n        <notification\n          v-else\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          The <b>2,4 GHz</b> frequency is disabled. Devices which only support this frequency can't connect to your Network.\n        </notification>\n\n        <notification\n          v-if=\"store.state.wifi.fiveGHz\"\n          color=\"info\"\n          :icon=\"mdiInformationVariant\"\n          permanent\n        >\n          The <b>5 GHz</b> frequency is enabled.\n        </notification>\n        <notification\n          v-else\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          The <b>5 GHz</b> frequency is disabled. Devices which only support this frequency can't connect to your Network.\n        </notification>\n        <!-- WLAN ssid info -->\n        <notification\n          v-if=\"store.state.wifi.ssid != ''\"\n          color=\"info\"\n          :icon=\"mdiInformationVariant\"\n          permanent\n        >\n          Your SSID is: <b> {{ store.state.wifi.ssid }} </b>\n        </notification>\n        <notification\n          v-else\n          color=\"danger\"\n          :icon=\"mdiAlertOctagram\"\n          permanent\n        >\n          Your SSID is emtpy!\n        </notification>\n        <!-- WLAN mode check  TODO! -->\n        <!-- Older SUpport check -->\n        <notification\n          v-if=\"!wifiBackwardsSupport\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Good. 👍 Older Wifi-Versions should not be supported if not necessary!\n        </notification>\n        <notification\n          v-if=\"wifiBackwardsSupport\"\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Ahh. 🤔 You enabled support for older Wifi-versions. If not necessary disable them.\n        </notification>\n\n        <!-- WIFI-6 SUpport check -->\n        <notification\n          v-if=\"wifi4Support\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Wifi-4️⃣ is supported\n        </notification>\n        <notification\n          v-if=\"!wifi4Support\"\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Wifi-4️⃣ is not supported!\n        </notification>\n        <!-- WIFI-5 SUpport check -->\n        <notification\n          v-if=\"wifi5Support\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Wifi-5️⃣ is supported\n        </notification>\n        <notification\n          v-if=\"!wifi5Support\"\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Wifi-5️⃣ is not supported!\n        </notification>\n        <!-- WIFI-6 SUpport check -->\n        <notification\n          v-if=\"wifi6Support\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Wifi-6️⃣is supported\n        </notification>\n        <notification\n          v-if=\"!wifi6Support\"\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>WLAN Mode:</b> Wifi-6️⃣ is not supported!\n        </notification>\n        <!-- WLAN channel check -->\n        <notification\n          v-if=\"store.state.wifi.channel > 0\"\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>WLAN Channel Settings:</b> Do you know what you are doing? If you don't have a reason choose the option <i>auto</i>.\n        </notification>\n      </div>\n    </card-component>\n\n    <!-- IF WLAN enabled -->\n    <div\n      v-if=\"wifiEnabled && checksDone\"\n      class=\"mb-6\"\n    >\n      <card-component title=\"WLAN-Security\">\n        <!-- WLAN security check start -->\n        <notification\n          v-if=\"store.state.wifi.security_mode == 'disabled' || store.state.wifi.security_mode == 'wep'\"\n          color=\"danger\"\n          :icon=\"mdiAlertOctagram \"\n          permanent\n        >\n          <b>Danger:</b> Security level to low.\n        </notification>\n        <notification\n          v-else-if=\"store.state.wifi.security_mode == 'wpa_e'\"\n          color=\"warning\"\n          :icon=\"mdiLockAlert\"\n          permanent\n        >\n          <b>Warning:</b> Good Idea to use WPA/WPA2 Enterprise. But we don't have an Radius Server.\n        </notification>\n        <notification\n          v-else\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>Good choise:</b> Using WPA/WPA2-PSK is a good option if your password is strong enough. ➡ Check at: <a\n            class=\"text-yellow-400\"\n            href=\"https://checkdeinpasswort.de/\"\n            target=\"_blank\"\n          >checkdeinpasswort.de</a>\n        </notification>\n        <!-- IF WLAN security = PSK  -->\n        <div\n          v-if=\"store.state.wifi.security_mode == 'wpa_psk'\"\n          class=\"my-6\"\n        >\n          <!-- Security PSK version check -->\n          <notification\n            v-if=\"store.state.wifi.security_psk.version > 0\"\n            color=\"success\"\n            :icon=\"mdiCheck\"\n            permanent\n          >\n            <b>Security Version is good </b> WPA2 or WPA3 is a good choise\n          </notification>\n          <notification\n            v-if=\"store.state.wifi.security_psk.version == 0\"\n            color=\"danger\"\n            :icon=\"mdiAlert\"\n            permanent\n          >\n            <b>Security Version:</b> Wahh. You should not use WPA anymore! 😮\n          </notification>\n          <!-- Security PSK encryption check -->\n          <notification\n            v-if=\"store.state.wifi.security_psk.encryption > 0\"\n            color=\"success\"\n            :icon=\"mdiCheck\"\n            permanent\n          >\n            <b>Security Encryption:</b> The AES Encryption does a good job. 👍\n          </notification>\n          <notification\n            v-else\n            color=\"warning\"\n            :icon=\"mdiAlert\"\n            permanent\n          >\n            <b>Security Encryption:</b> You should update to AES if possible.\n          </notification>\n        </div>\n        <!-- WLAN security check end -->\n      </card-component>\n      <card-component title=\"Mac-Filter\">\n        <!-- Mac Filter check -->\n        <notification\n          v-if=\"store.state.wifi.macFilter.enabled\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>MAC-Filter enabled:</b> Enabling MAC-Filters is a good option to secure your Wifi-Network. But be aware that hackers can bypass this easily.\n        </notification>\n        <notification\n          v-else\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n        >\n          <b>MAC-Filter disabled:</b> Enabling MAC-Filters is an option to secure your Wifi-Network.\n          <template #right>\n            <jb-button\n              to=\"/wifi-mac\"\n              :icon=\"mdiCog\"\n              icon-w=\"w-4\"\n              icon-h=\"h-4\"\n              :color=\"darkMode ? 'white' : 'light'\"\n              :outline=\"darkMode\"\n              small\n            />\n          </template>\n        </notification>\n      </card-component>\n      <card-component title=\"WLAN-Advanced-Settings\">\n        <!-- WIFI Advanced check -->\n        <!-- WIFI Advanced - broadcast check -->\n        <notification\n          v-if=\"store.state.wifi.broadcast_ssid\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>SSID-Broadcast:</b> enabled. This will allow you to see the Wifi in the List of available Networks.\n        </notification>\n        <notification\n          v-else\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>SSID-Broadcast:</b> disabled. You won't find your WLAN in the List of available Networks.\n        </notification>\n        <!-- WIFI Advanced - reduce antenna tx power check -->\n        <notification\n          v-if=\"store.state.wifi.reduce_tx_power\"\n          color=\"success\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>Reduce antenna transmit power:</b> enabled.\n        </notification>\n        <notification\n          v-else\n          color=\"warning\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>Reduce antenna transmit power:</b> disabled.\n        </notification>\n        <!-- WIFI Advanced - scheduler check -->\n        <notification\n          v-if=\"store.state.wifi.turn_off.from == '' || store.state.wifi.turn_off.till == ''\"\n          color=\"warning\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>Scheduler disabled.</b>  Maybe you can automatically turn wifi off during the night?\n        </notification>\n        <notification\n          v-else\n          color=\"success\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>Scheduler active. </b> Check if the time settings make sence.\n        </notification>\n      </card-component>\n      <card-component title=\"WPS Settings\">\n        <!-- WIFI WPS check -->\n        <notification\n          v-if=\"store.state.wifi.wps_enabled\"\n          color=\"warning\"\n          :icon=\"mdiCheck\"\n          permanent\n        >\n          <b>WPS enabled.</b> WPS is a nice option to add new devices to the wlan. But it may be an security hole. Better turn it off.\n        </notification>\n        <notification\n          v-else\n          color=\"success\"\n          :icon=\"mdiAlert\"\n          permanent\n        >\n          <b>WPS disabled</b> That sounds like a good idea. 👌\n        </notification>\n      </card-component>\n      <card-component title=\"Further Information\">\n        <!-- Further Information -->\n        <notification\n          color=\"info\"\n          :icon=\"mdiInformationVariant\"\n          permanent\n        >\n          No clients are currently connected.\n        </notification>\n      </card-component>\n    </div>\n  </main-section>\n  <bottom-other-pages-section />\n</template>\n","import script from \"./Wifi_Stats.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Wifi_Stats.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["router","useRouter","routes","getRoutes","screens","routeIndex","path","title","meta","push","__exports__","titleStack","ref","store","useStore","toast","useToast","darkMode","computed","state","wifiEnabled","wifi","twoPointFourGHz","fiveGHz","wifiBackwardsSupport","mode","console","log","wifi4Support","wifi5Support","wifi6Support","schedulerEnabled","turn_off","from","till","checks","reactive","done","code","wrongCode","checksDone","runChecks","commit","success","error"],"sourceRoot":""}