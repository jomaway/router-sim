{"version":3,"file":"js/wifi-settings-legacy.1b2cab8c.js","mappings":"glBA0BMA,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BC,IAAK,kBAAMC,EAAMC,YACjBC,IAAK,SAAAC,GACHC,EAAK,oBAAqBD,MAIxBE,GAAYP,EAAAA,EAAAA,KAAS,iBAAqB,UAAfE,EAAMM,KAAmB,QAAU,c,6hBC9BpE,MAAMC,EAAc,EAEpB,S,0XCiBMC,GAAiBV,EAAAA,EAAAA,KAAS,kBAAME,EAAMS,QACxCC,EAAAA,GAAcV,EAAMW,OACpB,CAACC,EAAAA,GAASZ,EAAMW,OAAQE,EAAAA,GAAcb,EAAMW,WAE1CG,GAAcC,EAAAA,EAAAA,KAAI,GAElBC,EAAU,WACdF,EAAYX,OAAQ,GAGhBc,GAAQC,EAAAA,EAAAA,MAERC,GAAerB,EAAAA,EAAAA,KAAS,kBAAMmB,EAAMG,SAEpCC,GAAQC,EAAAA,EAAAA,MAERC,GAAWzB,EAAAA,EAAAA,KAAS,kBAAMuB,EAAMG,MAAMD,Y,qvBCnC5C,MAAMhB,EAAc,EAEpB,S,+hGCcA,IAAMkB,GAAaV,EAAAA,EAAAA,IAAI,CAAC,WAAY,aAE9BM,GAAQC,EAAAA,EAAAA,MAERI,GAAQC,EAAAA,EAAAA,MAERC,GAAmBC,EAAAA,EAAAA,IAAS,CAChCC,KAAMT,EAAMG,MAAMO,KAAKD,KACvBE,KAAMC,EAAAA,GAAkBZ,EAAMG,MAAMO,KAAKC,MACzCE,QAASC,EAAAA,GAAqBd,EAAMG,MAAMO,KAAKG,SAC/CE,cAAeC,EAAAA,GAA0BhB,EAAMG,MAAMO,KAAKK,eAC1DE,SAAU,KAGZC,QAAQC,IAAI,SAERnB,EAAMG,MAAMO,KAAKU,iBACnBb,EAAiBU,SAASI,KAAK,gBAE7BrB,EAAMG,MAAMO,KAAKY,SACnBf,EAAiBU,SAASI,KAAK,QAGjC,IAAME,GAAc9C,EAAAA,EAAAA,KAAS,kBAAM8B,EAAiBU,SAASO,UAEvDC,GAAiB/B,EAAAA,EAAAA,KAAI,GAErBgC,EAAS,WAEiB,KAA1BnB,EAAiBE,MAAec,EAAYzC,OAC9C2C,EAAe3C,OAAQ,EACvBuB,EAAMsB,MAAM,2BAEZF,EAAe3C,OAAQ,EACvBkB,EAAM4B,SAAS,mBAAoBrB,GACnCW,QAAQC,IAAI,uBACZd,EAAMwB,QAAQ,oBAIZC,GAAcpC,EAAAA,EAAAA,IAAIM,EAAMG,MAAM4B,OAAOC,M,8/GCxD3C,MAAM9C,EAAc,EAEpB","sources":["webpack://router-sim/./src/components/CheckRadioPicker.vue","webpack://router-sim/./src/components/CheckRadioPicker.vue?5501","webpack://router-sim/./src/components/Notification.vue","webpack://router-sim/./src/components/Notification.vue?deb2","webpack://router-sim/./src/views/Wifi_Settings.vue","webpack://router-sim/./src/views/Wifi_Settings.vue?37f1"],"sourcesContent":["<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => {}\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  type: {\n    type: String,\n    default: 'checkbox'\n  },\n  column: Boolean,\n  disabled: Boolean,\n  modelValue: {\n    type: [Object, Array, String, Number],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst inputType = computed(() => props.type === 'radio' ? 'radio' : 'checkbox')\n\n</script>\n\n<template>\n  <div\n    class=\"flex justify-start flex-wrap -mb-3\"\n    :class=\"{'flex-col':column}\"\n  >\n    <label\n      v-for=\"(value, key) in options\"\n      :key=\"key\"\n      :class=\"type\"\n      class=\"mr-6 mb-3 last:mr-0\"\n    >\n      <input\n        v-model=\"computedValue\"\n        :type=\"inputType\"\n        :name=\"name\"\n        :value=\"key\"\n        :disabled=\"disabled\"\n      >\n      <span class=\"check\" />\n      <span class=\"control-label\">{{ value }}</span>\n    </label>\n  </div>\n</template>\n","import script from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, computed, useSlots } from 'vue'\nimport { useStore } from 'vuex'\nimport { mdiClose } from '@mdi/js'\nimport { colorsBg, colorsBorders, colorsOutline } from '@/colors.js'\nimport Level from '@/components/Level.vue'\nimport Icon from '@/components/Icon.vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  icon: {\n    type: String,\n    default: null\n  },\n  outline: Boolean,\n  color: {\n    type: String,\n    required: true\n  },\n  permanent: Boolean\n})\n\nconst componentClass = computed(() => props.outline\n  ? colorsOutline[props.color]\n  : [colorsBg[props.color], colorsBorders[props.color]])\n\nconst isDismissed = ref(false)\n\nconst dismiss = () => {\n  isDismissed.value = true\n}\n\nconst slots = useSlots()\n\nconst hasRightSlot = computed(() => slots.right)\n\nconst store = useStore()\n\nconst darkMode = computed(() => store.state.darkMode)\n</script>\n\n<template>\n  <div\n    v-if=\"!isDismissed\"\n    :class=\"componentClass\"\n    class=\"px-3 py-6 md:py-3 mx-6 md:mx-0 mb-6 last:mb-0 border rounded transition-colors duration-150\"\n  >\n    <level>\n      <div class=\"flex flex-col md:flex-row items-center\">\n        <icon\n          v-if=\"icon\"\n          :path=\"icon\"\n          w=\"w-10 md:w-5\"\n          h=\"h-10 md:h-5\"\n          size=\"24\"\n          class=\"md:mr-2\"\n        />\n        <span class=\"text-center md:text-left\"><slot /></span>\n      </div>\n      <slot\n        v-if=\"hasRightSlot\"\n        name=\"right\"\n      />\n      <jb-button\n        v-else-if=\"!props.permanent\"\n        :icon=\"mdiClose\"\n        :outline=\"outline || (darkMode && ['white', 'light'].indexOf(color) < 0)\"\n        small\n        @click=\"dismiss\"\n      />\n      <div v-else />\n    </level>\n  </div>\n</template>\n","import script from \"./Notification.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Notification.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { useToast } from 'vue-toastification'\nimport { mdiArrowRight, mdiWifi, mdiPencil, mdiInformation, mdiArrowDownThick } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport CheckRadioPicker from '@/components/CheckRadioPicker.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport Divider from '@/components/Divider.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport CardComponentCollapsable from '@/components/CardComponentCollapsable.vue'\nimport Icon from '@/components/Icon.vue'\nimport Notification from '@/components/Notification.vue'\nimport { selectModeOptions, selectChannelOptions, selectChannelWidthOptions } from '@/config'\n\nconst titleStack = ref(['Wireless', 'Settings'])\n\nconst store = useStore()\n\nconst toast = useToast()\n\nconst WifiSettingsForm = reactive({\n  ssid: store.state.wifi.ssid,\n  mode: selectModeOptions[store.state.wifi.mode],\n  channel: selectChannelOptions[store.state.wifi.channel],\n  channel_width: selectChannelWidthOptions[store.state.wifi.channel_width],\n  frequenz: []\n})\n\nconsole.log('setup')\n\nif (store.state.wifi.twoPointFourGHz) {\n  WifiSettingsForm.frequenz.push('twopointfour')\n}\nif (store.state.wifi.fiveGHz) {\n  WifiSettingsForm.frequenz.push('five')\n}\n\nconst wifiEnabled = computed(() => WifiSettingsForm.frequenz.length)\n\nconst emptySSIDcheck = ref(false)\n\nconst submit = () => {\n  // If save button is pressed\n  if (WifiSettingsForm.ssid === '' && wifiEnabled.value) {\n    emptySSIDcheck.value = true\n    toast.error('SSID can not be empty')\n  } else {\n    emptySSIDcheck.value = false\n    store.dispatch('saveWifiSettings', WifiSettingsForm)\n    console.log('Wifi-Settings saved')\n    toast.success('Settings saved')\n  }\n}\n\nconst allDisabled = ref(store.state.checks.done)\n\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n\n  <main-section>\n    <notification\n      color=\"info\"\n      :icon=\"mdiArrowDownThick\"\n      permanent\n    >\n      Für <b>weitere Informationen</b> scrollen Sie nach unten!\n    </notification>\n    <card-component\n      title=\"Wifi-Settings\"\n      :icon=\"mdiWifi\"\n      form\n      @submit.prevent=\"submit\"\n    >\n      <div>\n        <field\n          label=\"Frequenz\"\n          help=\"Select which frequency should be active. If none is enabled wifi is turned off completely.\"\n          wrap-body\n        >\n          <check-radio-picker\n            v-model=\"WifiSettingsForm.frequenz\"\n            name=\"frequency-checkbox\"\n            :options=\"{ twopointfour: '2,4 GHz', five: '5 GHz' }\"\n            :disabled=\"allDisabled\"\n            column\n          />\n        </field>\n\n        <div v-if=\"!wifiEnabled\">\n          <p>⬆ Wähle eine Frequenz um das WLAN für diese zu aktivieren </p>\n        </div>\n\n        <div v-show=\"wifiEnabled\">\n          <field\n            label=\"Wireless Network Name (SSID)\"\n            help=\"Der Name eines Netzwerks wird auch SSID genannt. Nutzen Sie keinen Namen der Rückschlüsse auf private Informationen zulässt.\"\n          >\n            <div class=\"flex flex-col\">\n              <p\n                v-if=\"emptySSIDcheck\"\n                class=\"text-red-600\"\n              >\n                SSID can't be empty!\n              </p>\n              <control\n                v-model=\"WifiSettingsForm.ssid\"\n                :icon=\"mdiPencil\"\n                :wrong-input=\"emptySSIDcheck\"\n                :disabled=\"allDisabled\"\n              />\n            </div>\n          </field>\n\n          <field\n            label=\"Mode\"\n            help=\"Der Modus legt fest welcher Standard genutzt wird. Falls möglich nutzen Sie einen aktuellen Standard. Ältere Standards sollten Sie nur nutzen falls Clients nur diese unterstützen.\"\n          >\n            <control\n              v-model=\"WifiSettingsForm.mode\"\n              :options=\"selectModeOptions\"\n              :disabled=\"allDisabled\"\n            />\n            <p class=\"text-red-600\">\n              ⬅ <b>Überprüfen</b> Sie in der Tabelle am Ende der Seite, welchen Modus Sie wählen müssen um Wifi-4 und Wifi-5 fähige Geräte zu unterstützen.\n            </p>\n          </field>\n\n          <div class=\"grid grid-cols-1 gap-6 mb-6 lg:grid-cols-2 \">\n            <field\n              label=\"Channel\"\n              help=\"Lassen Sie dies Funktion am besten auf auto, wenn sie sich nicht sicher sind. Weitere Informationen unter Infos\"\n            >\n              <control\n                v-model=\"WifiSettingsForm.channel\"\n                :options=\"selectChannelOptions\"\n                :disabled=\"allDisabled\"\n              />\n            </field>\n            <field\n              label=\"Channel Width\"\n              help=\"Hier können Sie die Kanalbreite festlegen. 20/40 MHz legt die Breite automatisch fest\"\n            >\n              <control\n                v-model=\"WifiSettingsForm.channel_width\"\n                :options=\"selectChannelWidthOptions\"\n                :disabled=\"allDisabled\"\n              />\n            </field>\n          </div>\n        </div>\n      </div>\n\n      <divider />\n\n      <jb-buttons>\n        <jb-button\n          type=\"submit\"\n          color=\"info\"\n          label=\"Save\"\n          :disabled=\"allDisabled\"\n        />\n      </jb-buttons>\n    </card-component>\n  </main-section>\n\n  <main-section>\n    <card-component-collapsable\n      title=\"Weitere Infos:\"\n      :icon=\"mdiInformation\"\n      expanded\n      class=\"bg-gray-200\"\n    >\n      <field label=\"Modus (engl. Mode):\">\n        <p>Der Modus gibt an welche WLAN-Standards unterstützt werden.</p>\n        <p>Ein WLAN-Standard gibt Auskunft über genutzte Frequenzbereiche, Geschwindigkeit und weitere technische Umsetzungen des WLANs. Um die kryptischen Bezeichnungen nach den IEEE 802.11 Projektgruppen zu vereinfachen, haben die Standards nun fortlaufende Nummern. Die Zuordnung sehen Sie in folgender Tabelle</p>\n        <table class=\"my-6\">\n          <thead class=\"bg-red-400 font-bold\">\n            <td>Generation</td>\n            <td>Standard</td>\n            <td>Frequenz</td>\n            <td>Jahr</td>\n          </thead>\n          <tr>\n            <td>Wifi-6</td>\n            <td>802.11 ax</td>\n            <td>2,4 GHz + 5 GHz</td>\n            <td>2021</td>\n          </tr>\n          <tr>\n            <td>Wifi-5</td>\n            <td>802.11 ac</td>\n            <td>nur für 5 GHz</td>\n            <td>2014</td>\n          </tr>\n          <tr>\n            <td>Wifi-4</td>\n            <td>802.11 n</td>\n            <td>2,4 GHz + 5 GHz</td>\n            <td>2009</td>\n          </tr>\n          <tr>\n            <td>Wifi-3*</td>\n            <td>802.11 g</td>\n            <td>2,4 GHz</td>\n            <td>2003</td>\n          </tr>\n          <tr>\n            <td>Wifi-2*</td>\n            <td>802.11 b / 802.11 a</td>\n            <td>2,4 GHz / 5 GHz</td>\n            <td>1999</td>\n          </tr>\n          <tr>\n            <td>Wifi-1*</td>\n            <td>802.11</td>\n            <td>2,4 GHz</td>\n            <td>1999</td>\n          </tr>\n        </table>\n        <div class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n          * keine offiziellen Bezeichnungen.\n        </div>\n      </field>\n\n      <field label=\"Kanäle (engl. Channel):\">\n        <p>Im 2,4-GHz-Frequenzband existieren insgesamt 79 schmalbandige Kanäle, die in Kanäle mit je 5 MHz zusammengefasst sind. In Europa gibt es 13, in den USA 11 und in Japan 14 solcher Kanäle. Diese Kanäle sind allerdings eng aneinandergereiht und überlappen sich. Deshalb kann man nicht alle der 11, 13 oder 14 Kanäle verwenden, sondern je nach Kanal-Verteilung nur 3 oder 4. Und das bei einer Kanalbreite von 20 MHz. Bei einer Kanalbreite von 40 MHz würde sich die Anzahl parallel nutzbarer Kanäle halbieren.</p>\n      </field>\n\n      <divider />\n      <div class=\"flex \">\n        <icon :path=\"mdiArrowRight\" />\n        <a\n          class=\"link text-red-600\"\n          href=\"https://www.elektronik-kompendium.de/sites/net/1712061.htm\"\n          target=\"_blank\"\n        > Weitere Infos hier</a>\n      </div>\n    </card-component-collapsable>\n  </main-section>\n</template>\n","import script from \"./Wifi_Settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Wifi_Settings.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["computedValue","computed","get","props","modelValue","set","value","emit","inputType","type","__exports__","componentClass","outline","colorsOutline","color","colorsBg","colorsBorders","isDismissed","ref","dismiss","slots","useSlots","hasRightSlot","right","store","useStore","darkMode","state","titleStack","toast","useToast","WifiSettingsForm","reactive","ssid","wifi","mode","selectModeOptions","channel","selectChannelOptions","channel_width","selectChannelWidthOptions","frequenz","console","log","twoPointFourGHz","push","fiveGHz","wifiEnabled","length","emptySSIDcheck","submit","error","dispatch","success","allDisabled","checks","done"],"sourceRoot":""}